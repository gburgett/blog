<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on Gordon Burgett | Director of Technology Development</title><link>http://www.gordonburgett.net/tags/javascript/</link><description>Recent content in Javascript on Gordon Burgett | Director of Technology Development</description><generator>Hugo</generator><language>en</language><copyright>All content © Gordon Burgett, 2014-2024</copyright><lastBuildDate>Sun, 20 May 2018 14:52:15 -0500</lastBuildDate><atom:link href="http://www.gordonburgett.net/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Feeling Like I'm at Hogwarts</title><link>http://www.gordonburgett.net/archive/2018/05_enrolled_at_hogwarts/</link><pubDate>Sun, 20 May 2018 14:52:15 -0500</pubDate><guid>http://www.gordonburgett.net/archive/2018/05_enrolled_at_hogwarts/</guid><description>&lt;p>I spent some time this week playing with &lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html">Typescript 2.8&amp;rsquo;s new features&lt;/a>
for modeling various complex types. The new syntax that I wanted to play with
was the conditional type syntax,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">T&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> &lt;span style="color:#a6e22e">U&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">X&lt;/span> : &lt;span style="color:#66d9ef">Y&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This syntax allows you to express some really crazy type relationships! Some of
the most interesting ones have been pre-defined in the Typescript standard lib:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Exclude&amp;lt;T, U&amp;gt;&lt;/code> – Exclude from T those types that are assignable to U.&lt;/li>
&lt;li>&lt;code>Extract&amp;lt;T, U&amp;gt;&lt;/code> – Extract from T those types that are assignable to U.&lt;/li>
&lt;/ul>
&lt;p>I wanted to see if I could use these to model the way we&amp;rsquo;ve been working with
return values from &lt;a href="https://www.contentful.com/developers/docs/references/content-delivery-api/">Contentful&amp;rsquo;s Content Delivery API&lt;/a>.&lt;/p></description></item><item><title>Modern Static Sites</title><link>http://www.gordonburgett.net/archive/2017/04_modern_static_sites/</link><pubDate>Thu, 20 Apr 2017 13:49:22 +0200</pubDate><guid>http://www.gordonburgett.net/archive/2017/04_modern_static_sites/</guid><description>&lt;p>Today in 2017, there are a thousand and one different ways to build a website. As always there&amp;rsquo;s good old fashioned &lt;a href="https://wordpress.com">Wordpress&lt;/a>, and of course there&amp;rsquo;s drag-n-drop website builders like &lt;a href="http://www.wix.com">Wix&lt;/a>. One thing these have in common is that they need a traditional hosting environment, and for that you gotta pay.&lt;/p>
&lt;p>If you can manage it, the cheapest way to host a website nowadays is to create a static HTML site. But don&amp;rsquo;t hand-craft HTML, that&amp;rsquo;s hard and boring. Use a static site generator, for fun and profit!&lt;/p></description></item></channel></rss>